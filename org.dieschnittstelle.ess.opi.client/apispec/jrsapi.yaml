---
components:
  schemas:
    java_lang_Object:
      properties: {}
      type: "object"
    StationaryTouchpoint:
      properties:
        address:
          type: "object"
          $ref: "#/components/schemas/Address"
        erpPointOfSaleId:
          type: "integer"
        name:
          type: "string"
        id:
          type: "integer"
        customers:
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_Customer"
          type: "array"
        transactions:
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_CustomerTransaction"
          type: "array"
      type: "object"
    Address:
      properties:
        zipCode:
          type: "string"
        city:
          type: "string"
        street:
          type: "string"
        geoLong:
          type: "integer"
        geoLat:
          type: "integer"
        id:
          type: "integer"
        houseNr:
          type: "string"
      type: "object"
    org_dieschnittstelle_ess_entities_crm_Customer:
      properties:
        lastName:
          type: "string"
        firstName:
          type: "string"
        address:
          type: "object"
          $ref: "#/components/schemas/Address"
        gender:
          nullable: true
          type: "string"
          enum:
          - "M"
          - "W"
        touchpoints:
          items:
            type: "object"
            $ref: "#/components/schemas/AbstractTouchpoint"
          type: "array"
        mobilePhoneId:
          type: "string"
        id:
          type: "integer"
        transactions:
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_CustomerTransaction"
          type: "array"
        preferredTouchpoint:
          type: "object"
          $ref: "#/components/schemas/AbstractTouchpoint"
        email:
          type: "string"
      type: "object"
    org_dieschnittstelle_ess_entities_crm_CustomerTransaction:
      properties:
        date:
          nullable: true
          type: "string"
        completed:
          type: "boolean"
        id:
          type: "integer"
        touchpoint:
          type: "object"
          $ref: "#/components/schemas/AbstractTouchpoint"
        items:
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_CustomerTransactionShoppingCartItem"
          type: "array"
        value:
          type: "integer"
        customer:
          type: "object"
          $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_Customer"
      type: "object"
    AbstractTouchpoint:
      properties:
        erpPointOfSaleId:
          type: "integer"
        name:
          type: "string"
        id:
          type: "integer"
        customers:
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_Customer"
          type: "array"
        transactions:
          items:
            type: "object"
            $ref: "#/components/schemas/org_dieschnittstelle_ess_entities_crm_CustomerTransaction"
          type: "array"
      type: "object"
    org_dieschnittstelle_ess_entities_crm_CustomerTransactionShoppingCartItem:
      properties:
        productObj:
          type: "object"
          $ref: "#/components/schemas/AbstractProduct"
        erpProductId:
          type: "integer"
        campaign:
          type: "boolean"
        units:
          type: "integer"
        id:
          type: "integer"
      type: "object"
    AbstractProduct:
      properties:
        price:
          type: "integer"
        name:
          type: "string"
        id:
          type: "integer"
      type: "object"
    IndividualisedProductItem:
      properties:
        price:
          type: "integer"
        name:
          type: "string"
        expirationAfterStocked:
          type: "integer"
        id:
          type: "integer"
        productType:
          nullable: true
          type: "string"
          enum:
          - "BREAD"
          - "ROLL"
          - "PASTRY"
      type: "object"
    Campaign:
      properties:
        price:
          type: "integer"
        bundles:
          items:
            type: "object"
            $ref: "#/components/schemas/ProductBundle"
          type: "array"
        name:
          type: "string"
        id:
          type: "integer"
      type: "object"
    ProductBundle:
      properties:
        product:
          type: "object"
          $ref: "#/components/schemas/IndividualisedProductItem"
        units:
          type: "integer"
        id:
          type: "integer"
      type: "object"
paths:
  /api/metrics:
    get:
      operationId: "getText_1"
      responses:
        "200":
          description: "default response"
          content:
            text/plain:
              schema:
                type: "string"
        default:
          description: "default response"
          content:
            text/plain:
              schema:
                type: "string"
      parameters: []
  /api/metrics/{registry}:
    get:
      operationId: "getJson_1_2"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
      parameters:
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "string"
        name: "registry"
    options:
      operationId: "getMetadata_1"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
      parameters:
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "string"
        name: "registry"
  /api/metrics/{registry}/{metric}:
    get:
      operationId: "getJson_1"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
      parameters:
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "string"
        name: "registry"
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "string"
        name: "metric"
    options:
      operationId: "getMetadata"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/java_lang_Object"
      parameters:
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "string"
        name: "registry"
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "string"
        name: "metric"
  /api/health:
    get:
      operationId: "getChecks"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                nullable: true
                properties: {}
                type: "object"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                nullable: true
                properties: {}
                type: "object"
      parameters: []
  /api/opi/touchpoints/{id}:
    delete:
      operationId: "deleteTouchpoint"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "boolean"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "boolean"
      parameters:
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "integer"
        name: "id"
    get:
      operationId: "readTouchpoint"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/StationaryTouchpoint"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/StationaryTouchpoint"
      parameters:
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "integer"
        name: "id"
  /api/opi/touchpoints:
    get:
      operationId: "readAllTouchpoints"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                items:
                  type: "object"
                  $ref: "#/components/schemas/StationaryTouchpoint"
                type: "array"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                items:
                  type: "object"
                  $ref: "#/components/schemas/StationaryTouchpoint"
                type: "array"
      parameters: []
    post:
      operationId: "createTouchpoint"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              $ref: "#/components/schemas/StationaryTouchpoint"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/StationaryTouchpoint"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/StationaryTouchpoint"
      parameters: []
  /api/opi/products/individualized_item/{productId}:
    delete:
      operationId: "deleteProduct"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "boolean"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "boolean"
      parameters:
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "integer"
        name: "productId"
    get:
      operationId: "readProduct"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
      parameters:
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "integer"
        name: "productId"
  /api/opi/products/individualized_item:
    get:
      operationId: "readAllProducts"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                items:
                  type: "object"
                  $ref: "#/components/schemas/IndividualisedProductItem"
                type: "array"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                items:
                  type: "object"
                  $ref: "#/components/schemas/IndividualisedProductItem"
                type: "array"
      parameters: []
    post:
      operationId: "createProduct"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              $ref: "#/components/schemas/IndividualisedProductItem"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
      parameters: []
  /api/opi/products/campaign:
    post:
      operationId: "createCampaign"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              $ref: "#/components/schemas/Campaign"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Campaign"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/Campaign"
      parameters: []
  /api/opi/products/individualized_item/{productsId}:
    put:
      operationId: "updateProduct"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              $ref: "#/components/schemas/IndividualisedProductItem"
      responses:
        "200":
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
        default:
          description: "default response"
          content:
            application/json:
              schema:
                type: "object"
                $ref: "#/components/schemas/IndividualisedProductItem"
      parameters:
      - required: true
        style: "simple"
        in: "path"
        schema:
          type: "integer"
        name: "productsId"
  /api/async/touchpoints/{id}: {}
  /api/async/touchpoints: {}
info:
  termsOfService: ""
  description: ""
  license:
    url: ""
    name: ""
  contact:
    url: ""
    email: ""
    name: ""
  title: "WebAPI for JRS, OPI and WSV exercises"
  version: "0.1"
openapi: "3.0.1"